<?xml version="1.0" encoding="utf-8"?>
<Document>
  <Engineering version="V17" />
  <DocumentInfo>
    <Created>2025-06-26T06:49:08.440511Z</Created>
    <ExportSetting>WithDefaults</ExportSetting>
    <InstalledProducts>
      <Product>
        <DisplayName>Totally Integrated Automation Portal</DisplayName>
        <DisplayVersion>V17 Update 8</DisplayVersion>
      </Product>
      <OptionPackage>
        <DisplayName>TIA Portal Openness</DisplayName>
        <DisplayVersion>V17 Update 8</DisplayVersion>
      </OptionPackage>
      <OptionPackage>
        <DisplayName>TIA Portal Version Control Interface</DisplayName>
        <DisplayVersion>V17</DisplayVersion>
      </OptionPackage>
      <Product>
        <DisplayName>STEP 7 Professional</DisplayName>
        <DisplayVersion>V17 Update 8</DisplayVersion>
      </Product>
      <OptionPackage>
        <DisplayName>STEP 7 Safety</DisplayName>
        <DisplayVersion>V17 Update 6</DisplayVersion>
      </OptionPackage>
      <Product>
        <DisplayName>WinCC Advanced</DisplayName>
        <DisplayVersion>V17 Update 8</DisplayVersion>
      </Product>
    </InstalledProducts>
  </DocumentInfo>
  <SW.Blocks.FB ID="0">
    <AttributeList>
      <AutoNumber>true</AutoNumber>
      <HeaderAuthor />
      <HeaderFamily />
      <HeaderName />
      <HeaderVersion>0.1</HeaderVersion>
      <Interface><Sections xmlns="http://www.siemens.com/automation/Openness/SW/Interface/v5">
  <Section Name="Input">
    <Member Name="bFirstCycle" Datatype="Bool" Remanence="NonRetain" Accessibility="Public"><AttributeList><BooleanAttribute Name="ExternalAccessible" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="ExternalVisible" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="ExternalWritable" SystemDefined="true">true</BooleanAttribute></AttributeList></Member>
    <Member Name="bStart" Datatype="Bool" Remanence="NonRetain" Accessibility="Public"><AttributeList><BooleanAttribute Name="ExternalAccessible" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="ExternalVisible" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="ExternalWritable" SystemDefined="true">true</BooleanAttribute></AttributeList></Member>
  </Section>
  <Section Name="Output">
    <Member Name="Done" Datatype="Bool" Remanence="NonRetain" Accessibility="Public"><AttributeList><BooleanAttribute Name="ExternalAccessible" SystemDefined="true">false</BooleanAttribute><BooleanAttribute Name="ExternalVisible" SystemDefined="true">false</BooleanAttribute><BooleanAttribute Name="ExternalWritable" SystemDefined="true">false</BooleanAttribute></AttributeList></Member>
    <Member Name="Initialised" Datatype="Bool" Remanence="NonRetain" Accessibility="Public"><AttributeList><BooleanAttribute Name="ExternalAccessible" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="ExternalVisible" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="ExternalWritable" SystemDefined="true">true</BooleanAttribute></AttributeList><Comment><MultiLanguageText Lang="de-DE">1 = successful init</MultiLanguageText></Comment></Member>
  </Section>
  <Section Name="InOut" />
  <Section Name="Static">
    <Member Name="InitReq" Datatype="Bool" Remanence="NonRetain" Accessibility="Public"><AttributeList><BooleanAttribute Name="ExternalAccessible" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="ExternalVisible" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="ExternalWritable" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="SetPoint" SystemDefined="true">false</BooleanAttribute></AttributeList></Member>
    <Member Name="InitErrorCode" Datatype="Word" Remanence="NonRetain" Accessibility="Public"><AttributeList><BooleanAttribute Name="ExternalAccessible" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="ExternalVisible" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="ExternalWritable" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="SetPoint" SystemDefined="true">false</BooleanAttribute></AttributeList></Member>
    <Member Name="InitSuccess" Datatype="Bool" Remanence="NonRetain" Accessibility="Public"><AttributeList><BooleanAttribute Name="ExternalAccessible" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="ExternalVisible" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="ExternalWritable" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="SetPoint" SystemDefined="true">false</BooleanAttribute></AttributeList></Member>
    <Member Name="ReadReq" Datatype="Bool" Remanence="NonRetain" Accessibility="Public"><AttributeList><BooleanAttribute Name="ExternalAccessible" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="ExternalVisible" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="ExternalWritable" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="SetPoint" SystemDefined="true">false</BooleanAttribute></AttributeList></Member>
    <Member Name="MasterDoneStored" Datatype="Bool" Remanence="NonRetain" Accessibility="Public"><AttributeList><BooleanAttribute Name="ExternalAccessible" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="ExternalVisible" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="ExternalWritable" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="SetPoint" SystemDefined="true">false</BooleanAttribute></AttributeList></Member>
    <Member Name="MasterStatus_stored" Datatype="Word" Remanence="NonRetain" Accessibility="Public"><AttributeList><BooleanAttribute Name="ExternalAccessible" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="ExternalVisible" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="ExternalWritable" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="SetPoint" SystemDefined="true">false</BooleanAttribute></AttributeList></Member>
    <Member Name="MasterDone" Datatype="Bool" Remanence="NonRetain" Accessibility="Public"><AttributeList><BooleanAttribute Name="ExternalAccessible" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="ExternalVisible" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="ExternalWritable" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="SetPoint" SystemDefined="true">false</BooleanAttribute></AttributeList></Member>
    <Member Name="MasterError" Datatype="Bool" Remanence="NonRetain" Accessibility="Public"><AttributeList><BooleanAttribute Name="ExternalAccessible" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="ExternalVisible" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="ExternalWritable" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="SetPoint" SystemDefined="true">false</BooleanAttribute></AttributeList></Member>
    <Member Name="MasterBusy" Datatype="Bool" Remanence="NonRetain" Accessibility="Public"><AttributeList><BooleanAttribute Name="ExternalAccessible" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="ExternalVisible" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="ExternalWritable" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="SetPoint" SystemDefined="true">false</BooleanAttribute></AttributeList></Member>
    <Member Name="MasterStatus" Datatype="Word" Remanence="NonRetain" Accessibility="Public"><AttributeList><BooleanAttribute Name="ExternalAccessible" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="ExternalVisible" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="ExternalWritable" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="SetPoint" SystemDefined="true">false</BooleanAttribute></AttributeList></Member>
    <Member Name="State" Datatype="USInt" Remanence="NonRetain" Accessibility="Public"><AttributeList><BooleanAttribute Name="ExternalAccessible" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="ExternalVisible" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="ExternalWritable" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="SetPoint" SystemDefined="true">false</BooleanAttribute></AttributeList></Member>
    <Member Name="Wait" Datatype="TON_TIME" Version="1.0" Remanence="NonRetain" Accessibility="Public"><AttributeList><BooleanAttribute Name="ExternalAccessible" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="ExternalVisible" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="ExternalWritable" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="SetPoint" SystemDefined="true">false</BooleanAttribute></AttributeList><Sections><Section Name="None"><Member Name="PT" Datatype="Time" /><Member Name="ET" Datatype="Time" /><Member Name="IN" Datatype="Bool" /><Member Name="Q" Datatype="Bool" /></Section></Sections></Member>
    <Member Name="Node1CommCycles" Datatype="UDInt" Remanence="NonRetain" Accessibility="Public"><AttributeList><BooleanAttribute Name="ExternalAccessible" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="ExternalVisible" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="ExternalWritable" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="SetPoint" SystemDefined="true">true</BooleanAttribute></AttributeList></Member>
    <Member Name="Node2CommCycles" Datatype="UDInt" Remanence="NonRetain" Accessibility="Public"><AttributeList><BooleanAttribute Name="ExternalAccessible" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="ExternalVisible" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="ExternalWritable" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="SetPoint" SystemDefined="true">false</BooleanAttribute></AttributeList></Member>
    <Member Name="Node10CommCycles" Datatype="UDInt" Remanence="NonRetain" Accessibility="Public"><AttributeList><BooleanAttribute Name="ExternalAccessible" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="ExternalVisible" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="ExternalWritable" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="SetPoint" SystemDefined="true">false</BooleanAttribute></AttributeList></Member>
    <Member Name="Node20CommCycles" Datatype="UDInt" Remanence="NonRetain" Accessibility="Public"><AttributeList><BooleanAttribute Name="ExternalAccessible" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="ExternalVisible" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="ExternalWritable" SystemDefined="true">true</BooleanAttribute><BooleanAttribute Name="SetPoint" SystemDefined="true">false</BooleanAttribute></AttributeList></Member>
  </Section>
  <Section Name="Temp">
    <Member Name="InitDone" Datatype="Bool" />
    <Member Name="InitError" Datatype="Bool" />
    <Member Name="InitStatus" Datatype="Word" />
  </Section>
  <Section Name="Constant" />
</Sections></Interface>
      <IsIECCheckEnabled>false</IsIECCheckEnabled>
      <IsRetainMemResEnabled>false</IsRetainMemResEnabled>
      <MemoryLayout>Optimized</MemoryLayout>
      <MemoryReserve>0</MemoryReserve>
      <Name>ModbusRTUMaster</Name>
      <Number>7</Number>
      <ProgrammingLanguage>FBD</ProgrammingLanguage>
      <SetENOAutomatically>false</SetENOAutomatically>
      <UDABlockProperties />
      <UDAEnableTagReadback>false</UDAEnableTagReadback>
    </AttributeList>
    <ObjectList>
      <MultilingualText ID="1" CompositionName="Comment">
        <ObjectList>
          <MultilingualTextItem ID="2" CompositionName="Items">
            <AttributeList>
              <Culture>de-DE</Culture>
              <Text>Sequence communication to several nodes. Each node is just added as more states to the state machine. There are better ways to do this but this will do for now.</Text>
            </AttributeList>
          </MultilingualTextItem>
        </ObjectList>
      </MultilingualText>
      <SW.Blocks.CompileUnit ID="3" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource><StructuredText xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/StructuredText/v3">
  <LineComment Inserted="false" NoClosingBracket="false" UId="21">
    <Text UId="22"> Modbus_Master's MODE input: (S7-1200 Programmable controller system manual, P. 1199 (A5E02486680-AM)</Text>
  </LineComment>
  <NewLine Num="1" UId="23" />
  <LineComment Inserted="false" NoClosingBracket="false" UId="24">
    <Text UId="25"> MODE 0 : Read Modbus address 1 to 9999, 10001 to 19999 as bits, 30001 to 39999, 40001 to 49999 as words</Text>
  </LineComment>
  <NewLine Num="1" UId="26" />
  <LineComment Inserted="false" NoClosingBracket="false" UId="27">
    <Text UId="28"> MODE 104 : Read Modbus address 0 to 65535 as words</Text>
  </LineComment>
  <NewLine Num="1" UId="29" />
  <LineComment Inserted="false" NoClosingBracket="false" UId="30">
    <Text UId="31"> Mode 1 : Write Modbus address 1 to 9999 as bits, 40001 to 49999 as words, 2 or more at a time</Text>
  </LineComment>
  <NewLine Num="1" UId="32" />
  <LineComment Inserted="false" NoClosingBracket="false" UId="33">
    <Text UId="34"> Mode 2 : As above but 1 or more at a time</Text>
  </LineComment>
  <NewLine Num="2" UId="35" />
  <Token Text="CASE" UId="36" />
  <Blank Num="1" UId="37" />
  <Access Scope="LocalVariable" UId="38">
    <Symbol UId="39">
      <Component Name="State" UId="40" />
    </Symbol>
  </Access>
  <Blank Num="1" UId="41" />
  <Token Text="OF" UId="42" />
  <NewLine Num="1" UId="43" />
  <Blank Num="4" UId="44" />
  <Access Scope="LiteralConstant" UId="45">
    <Constant UId="46">
      <ConstantValue UId="48">0</ConstantValue>
    </Constant>
  </Access>
  <Token Text=":" UId="49" />
  <Blank Num="2" UId="50" />
  <LineComment Inserted="false" NoClosingBracket="false" UId="51">
    <Text UId="52"> IDLE</Text>
  </LineComment>
  <NewLine Num="1" UId="53" />
  <Blank Num="8" UId="54" />
  <Token Text="IF" UId="55" />
  <Blank Num="1" UId="56" />
  <Access Scope="LocalVariable" UId="57">
    <Symbol UId="58">
      <Component Name="bStart" UId="59" />
    </Symbol>
  </Access>
  <Blank Num="1" UId="60" />
  <Token Text="=" UId="61" />
  <Blank Num="1" UId="62" />
  <Access Scope="LiteralConstant" UId="63">
    <Constant UId="64">
      <ConstantValue UId="66">TRUE</ConstantValue>
    </Constant>
  </Access>
  <Blank Num="1" UId="67" />
  <Token Text="THEN" UId="68" />
  <NewLine Num="1" UId="69" />
  <Blank Num="12" UId="70" />
  <Access Scope="LocalVariable" UId="71">
    <Symbol UId="72">
      <Component Name="Done" UId="73" />
    </Symbol>
  </Access>
  <Blank Num="1" UId="74" />
  <Token Text=":=" UId="75" />
  <Blank Num="1" UId="76" />
  <Access Scope="LiteralConstant" UId="77">
    <Constant UId="78">
      <ConstantValue UId="80">FALSE</ConstantValue>
    </Constant>
  </Access>
  <Token Text=";" UId="81" />
  <NewLine Num="1" UId="82" />
  <Blank Num="12" UId="83" />
  <Access Scope="LocalVariable" UId="84">
    <Symbol UId="85">
      <Component Name="InitReq" UId="86" />
    </Symbol>
  </Access>
  <Blank Num="1" UId="87" />
  <Token Text=":=" UId="88" />
  <Blank Num="1" UId="89" />
  <Access Scope="LiteralConstant" UId="90">
    <Constant UId="91">
      <ConstantValue UId="93">TRUE</ConstantValue>
    </Constant>
  </Access>
  <Token Text=";" UId="94" />
  <NewLine Num="1" UId="95" />
  <Blank Num="12" UId="96" />
  <Access Scope="LocalVariable" UId="97">
    <Symbol UId="98">
      <Component Name="State" UId="99" />
    </Symbol>
  </Access>
  <Blank Num="1" UId="100" />
  <Token Text=":=" UId="101" />
  <Blank Num="1" UId="102" />
  <Access Scope="LiteralConstant" UId="103">
    <Constant UId="104">
      <ConstantValue UId="106">1</ConstantValue>
    </Constant>
  </Access>
  <Token Text=";" UId="107" />
  <NewLine Num="1" UId="108" />
  <Blank Num="12" UId="109" />
  <Access Scope="LocalVariable" UId="110">
    <Symbol UId="111">
      <Component Name="Node1CommCycles" UId="112" />
    </Symbol>
  </Access>
  <Blank Num="1" UId="113" />
  <Token Text=":=" UId="114" />
  <Blank Num="1" UId="115" />
  <Access Scope="LiteralConstant" UId="116">
    <Constant UId="117">
      <ConstantValue UId="119">0</ConstantValue>
    </Constant>
  </Access>
  <Token Text=";" UId="120" />
  <NewLine Num="1" UId="121" />
  <Blank Num="12" UId="122" />
  <Access Scope="LocalVariable" UId="123">
    <Symbol UId="124">
      <Component Name="Node2CommCycles" UId="125" />
    </Symbol>
  </Access>
  <Blank Num="1" UId="126" />
  <Token Text=":=" UId="127" />
  <Blank Num="1" UId="128" />
  <Access Scope="LiteralConstant" UId="129">
    <Constant UId="130">
      <ConstantValue UId="132">0</ConstantValue>
    </Constant>
  </Access>
  <Token Text=";" UId="133" />
  <NewLine Num="1" UId="134" />
  <Blank Num="12" UId="135" />
  <Access Scope="LocalVariable" UId="136">
    <Symbol UId="137">
      <Component Name="Node20CommCycles" UId="138" />
    </Symbol>
  </Access>
  <Blank Num="1" UId="139" />
  <Token Text=":=" UId="140" />
  <Blank Num="1" UId="141" />
  <Access Scope="LiteralConstant" UId="142">
    <Constant UId="143">
      <ConstantValue UId="145">0</ConstantValue>
    </Constant>
  </Access>
  <Token Text=";" UId="146" />
  <NewLine Num="1" UId="147" />
  <Blank Num="8" UId="148" />
  <Token Text="END_IF" UId="149" />
  <Token Text=";" UId="150" />
  <NewLine Num="1" UId="151" />
  <Blank Num="4" UId="152" />
  <Access Scope="LiteralConstant" UId="153">
    <Constant UId="154">
      <ConstantValue UId="156">1</ConstantValue>
    </Constant>
  </Access>
  <Token Text=":" UId="157" />
  <Blank Num="2" UId="158" />
  <LineComment Inserted="false" NoClosingBracket="false" UId="159">
    <Text UId="160"> INIT (runs once, not once every comm cycle)</Text>
  </LineComment>
  <NewLine Num="2" UId="161" />
  <Blank Num="8" UId="162" />
  <LineComment Inserted="false" NoClosingBracket="false" UId="163">
    <Text UId="164"> For some reason, the duplex mode has to be set manually, and before the init block runs. </Text>
  </LineComment>
  <NewLine Num="1" UId="165" />
  <Blank Num="8" UId="166" />
  <LineComment Inserted="false" NoClosingBracket="false" UId="167">
    <Text UId="168"> Source: Siemens demo project for CM1241. Doesn't work without.</Text>
  </LineComment>
  <NewLine Num="1" UId="169" />
  <Blank Num="8" UId="170" />
  <Access Scope="GlobalVariable" UId="171">
    <Symbol UId="172">
      <Component Name="Modbus_Comm_Load_DB" UId="173" />
      <Token Text="." UId="174" />
      <Component Name="MODE" UId="175" />
    </Symbol>
  </Access>
  <Blank Num="1" UId="176" />
  <Token Text=":=" UId="177" />
  <Blank Num="1" UId="178" />
  <Access Scope="LiteralConstant" UId="179">
    <Constant UId="180">
      <ConstantValue UId="182">4</ConstantValue>
    </Constant>
  </Access>
  <Token Text=";" UId="183" />
  <NewLine Num="1" UId="184" />
  <Blank Num="8" UId="185" />
  <LineComment Inserted="false" NoClosingBracket="false" UId="186">
    <Text UId="187"> REQ can only be high for one cycle. Wait 100ms (RESP_TO ) for slave response</Text>
  </LineComment>
  <NewLine Num="1" UId="188" />
  <Blank Num="8" UId="189" />
  <Access Scope="GlobalVariable" UId="190">
    <Symbol UId="191">
      <Component Name="Modbus_Comm_Load_DB" UId="192" />
    </Symbol>
  </Access>
  <Access Scope="Call" UId="193">
    <Instruction UId="194">
      <Token Text="(" UId="195" />
      <Parameter Name="REQ" UId="196">
        <Blank Num="1" UId="197" />
        <Token Text=":=" UId="198" />
        <Blank Num="1" UId="199" />
        <Access Scope="LocalVariable" UId="200">
          <Symbol UId="201">
            <Component Name="InitReq" UId="202" />
          </Symbol>
        </Access>
      </Parameter>
      <Token Text="," UId="203" />
      <Blank Num="1" UId="204" />
      <NewLine Num="1" UId="205" />
      <Blank Num="30" UId="206" />
      <Parameter Name="PORT" UId="207">
        <Blank Num="1" UId="208" />
        <Token Text=":=" UId="209" />
        <Blank Num="1" UId="210" />
        <Access Scope="GlobalConstant" UId="211">
          <Constant Name="Local~Modbus_RTU" UId="212" />
        </Access>
      </Parameter>
      <Token Text="," UId="215" />
      <Blank Num="1" UId="216" />
      <NewLine Num="1" UId="217" />
      <Blank Num="30" UId="218" />
      <Parameter Name="BAUD" UId="219">
        <Blank Num="1" UId="220" />
        <Token Text=":=" UId="221" />
        <Blank Num="1" UId="222" />
        <Access Scope="LiteralConstant" UId="223">
          <Constant UId="224">
            <ConstantValue UId="226">19200</ConstantValue>
          </Constant>
        </Access>
      </Parameter>
      <Token Text="," UId="227" />
      <Blank Num="1" UId="228" />
      <NewLine Num="1" UId="229" />
      <Blank Num="30" UId="230" />
      <Parameter Name="PARITY" UId="231">
        <Blank Num="1" UId="232" />
        <Token Text=":=" UId="233" />
        <Blank Num="1" UId="234" />
        <Access Scope="LiteralConstant" UId="235">
          <Constant UId="236">
            <ConstantValue UId="238">0</ConstantValue>
          </Constant>
        </Access>
      </Parameter>
      <Token Text="," UId="239" />
      <Blank Num="1" UId="240" />
      <NewLine Num="1" UId="241" />
      <Blank Num="30" UId="242" />
      <Parameter Name="FLOW_CTRL" UId="243">
        <Blank Num="1" UId="244" />
        <Token Text=":=" UId="245" />
        <Blank Num="1" UId="246" />
        <Access Scope="LiteralConstant" UId="247">
          <Constant UId="248">
            <ConstantValue UId="250">0</ConstantValue>
          </Constant>
        </Access>
      </Parameter>
      <Token Text="," UId="251" />
      <Blank Num="1" UId="252" />
      <NewLine Num="1" UId="253" />
      <Blank Num="30" UId="254" />
      <Parameter Name="RTS_ON_DLY" UId="255">
        <Blank Num="1" UId="256" />
        <Token Text=":=" UId="257" />
        <Blank Num="1" UId="258" />
        <Access Scope="LiteralConstant" UId="259">
          <Constant UId="260">
            <ConstantValue UId="262">0</ConstantValue>
          </Constant>
        </Access>
      </Parameter>
      <Token Text="," UId="263" />
      <Blank Num="1" UId="264" />
      <NewLine Num="1" UId="265" />
      <Blank Num="30" UId="266" />
      <Parameter Name="RTS_OFF_DLY" UId="267">
        <Blank Num="1" UId="268" />
        <Token Text=":=" UId="269" />
        <Blank Num="1" UId="270" />
        <Access Scope="LiteralConstant" UId="271">
          <Constant UId="272">
            <ConstantValue UId="274">0</ConstantValue>
          </Constant>
        </Access>
      </Parameter>
      <Token Text="," UId="275" />
      <Blank Num="1" UId="276" />
      <NewLine Num="1" UId="277" />
      <Blank Num="30" UId="278" />
      <Parameter Name="RESP_TO" UId="279">
        <Blank Num="1" UId="280" />
        <Token Text=":=" UId="281" />
        <Blank Num="1" UId="282" />
        <Access Scope="LiteralConstant" UId="283">
          <Constant UId="284">
            <ConstantValue UId="286">100</ConstantValue>
          </Constant>
        </Access>
      </Parameter>
      <Token Text="," UId="287" />
      <Blank Num="1" UId="288" />
      <NewLine Num="1" UId="289" />
      <Blank Num="30" UId="290" />
      <Parameter Name="MB_DB" UId="291">
        <Blank Num="1" UId="292" />
        <Token Text=":=" UId="293" />
        <Blank Num="1" UId="294" />
        <Access Scope="GlobalVariable" UId="295">
          <Symbol UId="296">
            <Component Name="Modbus_Master_DB" UId="297" />
            <Token Text="." UId="298" />
            <Component Name="MB_DB" UId="299" />
          </Symbol>
        </Access>
      </Parameter>
      <Token Text="," UId="300" />
      <NewLine Num="1" UId="301" />
      <Blank Num="30" UId="302" />
      <Parameter Name="DONE" UId="303">
        <Blank Num="1" UId="304" />
        <Token Text="=&gt;" UId="305" />
        <Blank Num="1" UId="306" />
        <Access Scope="LocalVariable" UId="307">
          <Symbol UId="308">
            <Component Name="InitDone" UId="309" />
          </Symbol>
        </Access>
      </Parameter>
      <Token Text="," UId="310" />
      <NewLine Num="1" UId="311" />
      <Blank Num="30" UId="312" />
      <Parameter Name="ERROR" UId="313">
        <Blank Num="1" UId="314" />
        <Token Text="=&gt;" UId="315" />
        <Blank Num="1" UId="316" />
        <Access Scope="LocalVariable" UId="317">
          <Symbol UId="318">
            <Component Name="InitError" UId="319" />
          </Symbol>
        </Access>
      </Parameter>
      <Token Text="," UId="320" />
      <NewLine Num="1" UId="321" />
      <Blank Num="30" UId="322" />
      <Parameter Name="STATUS" UId="323">
        <Blank Num="1" UId="324" />
        <Token Text="=&gt;" UId="325" />
        <Blank Num="1" UId="326" />
        <Access Scope="LocalVariable" UId="327">
          <Symbol UId="328">
            <Component Name="InitStatus" UId="329" />
          </Symbol>
        </Access>
      </Parameter>
      <Token Text=")" UId="330" />
    </Instruction>
  </Access>
  <Token Text=";" UId="331" />
  <NewLine Num="1" UId="332" />
  <Blank Num="8" UId="333" />
  <Access Scope="LocalVariable" UId="334">
    <Symbol UId="335">
      <Component Name="InitReq" UId="336" />
    </Symbol>
  </Access>
  <Blank Num="1" UId="337" />
  <Token Text=":=" UId="338" />
  <Blank Num="1" UId="339" />
  <Access Scope="LiteralConstant" UId="340">
    <Constant UId="341">
      <ConstantValue UId="343">FALSE</ConstantValue>
    </Constant>
  </Access>
  <Token Text=";" UId="344" />
  <NewLine Num="1" UId="345" />
  <Blank Num="8" UId="346" />
  <Token Text="IF" UId="347" />
  <Blank Num="1" UId="348" />
  <Access Scope="LocalVariable" UId="349">
    <Symbol UId="350">
      <Component Name="InitDone" UId="351" />
    </Symbol>
  </Access>
  <Blank Num="1" UId="352" />
  <Token Text="THEN" UId="353" />
  <NewLine Num="1" UId="354" />
  <Blank Num="12" UId="355" />
  <Access Scope="LocalVariable" UId="356">
    <Symbol UId="357">
      <Component Name="InitSuccess" UId="358" />
    </Symbol>
  </Access>
  <Blank Num="1" UId="359" />
  <Token Text=":=" UId="360" />
  <Blank Num="1" UId="361" />
  <Access Scope="LiteralConstant" UId="362">
    <Constant UId="363">
      <ConstantValue UId="365">TRUE</ConstantValue>
    </Constant>
  </Access>
  <Token Text=";" UId="366" />
  <NewLine Num="1" UId="367" />
  <Blank Num="12" UId="368" />
  <Access Scope="LocalVariable" UId="369">
    <Symbol UId="370">
      <Component Name="InitErrorCode" UId="371" />
    </Symbol>
  </Access>
  <Blank Num="1" UId="372" />
  <Token Text=":=" UId="373" />
  <Blank Num="1" UId="374" />
  <Access Scope="LiteralConstant" UId="375">
    <Constant UId="376">
      <ConstantValue UId="378">0</ConstantValue>
    </Constant>
  </Access>
  <Token Text=";" UId="379" />
  <NewLine Num="1" UId="380" />
  <Blank Num="12" UId="381" />
  <Access Scope="LocalVariable" UId="382">
    <Symbol UId="383">
      <Component Name="State" UId="384" />
    </Symbol>
  </Access>
  <Blank Num="1" UId="385" />
  <Token Text=":=" UId="386" />
  <Blank Num="1" UId="387" />
  <Access Scope="LiteralConstant" UId="388">
    <Constant UId="389">
      <ConstantValue UId="391">4</ConstantValue>
    </Constant>
  </Access>
  <Token Text=";" UId="392" />
  <NewLine Num="1" UId="393" />
  <Blank Num="8" UId="394" />
  <Token Text="ELSIF" UId="395" />
  <Blank Num="1" UId="396" />
  <Access Scope="LocalVariable" UId="397">
    <Symbol UId="398">
      <Component Name="InitError" UId="399" />
    </Symbol>
  </Access>
  <Blank Num="1" UId="400" />
  <Token Text="THEN" UId="401" />
  <NewLine Num="1" UId="402" />
  <Blank Num="12" UId="403" />
  <Access Scope="LocalVariable" UId="404">
    <Symbol UId="405">
      <Component Name="InitSuccess" UId="406" />
    </Symbol>
  </Access>
  <Blank Num="1" UId="407" />
  <Token Text=":=" UId="408" />
  <Blank Num="1" UId="409" />
  <Access Scope="LiteralConstant" UId="410">
    <Constant UId="411">
      <ConstantValue UId="413">FALSE</ConstantValue>
    </Constant>
  </Access>
  <Token Text=";" UId="414" />
  <NewLine Num="1" UId="415" />
  <Blank Num="12" UId="416" />
  <Access Scope="LocalVariable" UId="417">
    <Symbol UId="418">
      <Component Name="InitErrorCode" UId="419" />
    </Symbol>
  </Access>
  <Blank Num="1" UId="420" />
  <Token Text=":=" UId="421" />
  <Blank Num="1" UId="422" />
  <Access Scope="LocalVariable" UId="423">
    <Symbol UId="424">
      <Component Name="InitStatus" UId="425" />
    </Symbol>
  </Access>
  <Token Text=";" UId="426" />
  <NewLine Num="1" UId="427" />
  <Blank Num="12" UId="428" />
  <Access Scope="LocalVariable" UId="429">
    <Symbol UId="430">
      <Component Name="State" UId="431" />
    </Symbol>
  </Access>
  <Blank Num="1" UId="432" />
  <Token Text=":=" UId="433" />
  <Blank Num="1" UId="434" />
  <Access Scope="LiteralConstant" UId="435">
    <Constant UId="436">
      <ConstantValue UId="438">1</ConstantValue>
    </Constant>
  </Access>
  <Token Text=";" UId="439" />
  <NewLine Num="1" UId="440" />
  <Blank Num="8" UId="441" />
  <Token Text="END_IF" UId="442" />
  <Token Text=";" UId="443" />
  <NewLine Num="1" UId="444" />
  <Blank Num="8" UId="445" />
  <Access Scope="LocalVariable" UId="446">
    <Symbol UId="447">
      <Component Name="Initialised" UId="448" />
    </Symbol>
  </Access>
  <Blank Num="1" UId="449" />
  <Token Text=":=" UId="450" />
  <Blank Num="1" UId="451" />
  <Access Scope="LocalVariable" UId="452">
    <Symbol UId="453">
      <Component Name="InitSuccess" UId="454" />
    </Symbol>
  </Access>
  <Token Text=";" UId="455" />
  <NewLine Num="1" UId="456" />
  <LineComment Inserted="true" NoClosingBracket="false" UId="457">
    <Text UId="458"> ### Rewrite this for the actual nodes in the communication
    3: // Done
        // Optional wait between cycles
        //#Wait(IN := TRUE, PT := T#1ms);
        //IF #Wait.Q = TRUE THEN
        //    #Done := TRUE;
        //    #State := 4;
        //END_IF;
        #Done := TRUE;
        #State := 4;

    4: // Read Node 1
        "Modbus_Master_DB"(REQ := TRUE,
                            MB_ADDR := 1, 
                            MODE := 0, 
                            DATA_ADDR := 40009, 
                            DATA_LEN := 4,
                            DATA_PTR := P#DB10.DBX0.0 WORD 8,
                            DONE =&gt; #MasterDone,
                            BUSY =&gt; #MasterBusy,
                            ERROR =&gt; #MasterError,
                            STATUS =&gt; #MasterStatus);
        IF #MasterError = TRUE THEN 
            #MasterStatus_stored := #MasterStatus;
            "TA_State".%X0 := FALSE;
            #State := 6;
        ELSIF #MasterDone = TRUE THEN
            #MasterStatus := 0;
            "TA_State".%X0 := TRUE;
            "TA1_Rx".SW := "MasterData".dataPtr.data[0];
            "TA1_Rx".Act1 := "MasterData".dataPtr.data[1];
            "TA1_Rx".Act2 := "MasterData".dataPtr.data[2];
            "TA1_Rx".DataIO_12 := "MasterData".dataPtr.data[3];
            #State := 5;
        END_IF;
    5: // Write Node 1
        "MasterData".dataPtr.data[0] := "TA1_Tx".CW;
        "MasterData".dataPtr.data[1] := "TA1_Tx".Ref1;
        "MasterData".dataPtr.data[2] := "TA1_Tx".Ref2;
        "Modbus_Master_DB"(REQ := TRUE,
                            MB_ADDR := 1, 
                            MODE := 1, 
                            DATA_ADDR := 40001, 
                            DATA_LEN := 3,
                            DATA_PTR := P#DB10.DBX0.0 WORD 8,
                            DONE =&gt; #MasterDone,
                            BUSY =&gt; #MasterBusy,
                            ERROR =&gt; #MasterError,
                            STATUS =&gt; #MasterStatus);
        IF #MasterError = TRUE THEN 
            #MasterStatus_stored := #MasterStatus;
            "TA_State".%X0 := FALSE;
            #State := 6;
        ELSIF #MasterDone = TRUE THEN
            #MasterStatus := 0;
            "TA_State".%X0 := TRUE;
            #State := 6;
            #Node1CommCycles := #Node1CommCycles + 1;
        END_IF;
    6: // Read Node 2
        "Modbus_Master_DB"(REQ := TRUE,
                            MB_ADDR := 2, 
                            MODE := 0, 
                            DATA_ADDR := 40009, 
                            DATA_LEN := 4,
                            DATA_PTR := P#DB10.DBX0.0 WORD 8,
                            DONE =&gt; #MasterDone,
                            BUSY =&gt; #MasterBusy,
                            ERROR =&gt; #MasterError,
                            STATUS =&gt; #MasterStatus);
        IF #MasterError = TRUE THEN 
            #MasterStatus_stored := #MasterStatus;
            "TA_State".%X1 := FALSE;
            #State := 8;
        ELSIF #MasterDone = TRUE THEN
            #MasterStatus := 0;
            "TA_State".%X1 := TRUE;
            "TA2_Rx".SW :="MasterData".dataPtr.data[0];
            "TA2_Rx".Act1 := "MasterData".dataPtr.data[1];
            "TA2_Rx".Act2 := "MasterData".dataPtr.data[2];
            "TA2_Rx".DataIO_12 := "MasterData".dataPtr.data[3];
            #State := 7;
        END_IF;
    7: // Write Node 2
        "MasterData".dataPtr.data[0] := "TA2_Tx".CW;
        "MasterData".dataPtr.data[1] := "TA2_Tx".Ref1;
        "MasterData".dataPtr.data[2] := "TA2_Tx".Ref2;
        "Modbus_Master_DB"(REQ := TRUE,
                            MB_ADDR := 2, 
                            MODE := 1, 
                            DATA_ADDR := 40001, 
                            DATA_LEN := 3,
                            DATA_PTR := P#DB10.DBX0.0 WORD 8,
                            DONE =&gt; #MasterDone,
                            BUSY =&gt; #MasterBusy,
                            ERROR =&gt; #MasterError,
                            STATUS =&gt; #MasterStatus);
        IF #MasterError = TRUE THEN 
            #MasterStatus_stored := #MasterStatus;
            "TA_State".%X1 := FALSE;
            #State := 8;
        ELSIF #MasterDone = TRUE THEN
            #MasterStatus := 0;
            "TA_State".%X1 := TRUE;
            #State := 8;
            #Node2CommCycles := #Node2CommCycles + 1;   
        END_IF;
 
    8: // Read Node 10
        "Modbus_Master_DB"(REQ := TRUE,
                            MB_ADDR := 10, 
                            MODE := 0, 
                            DATA_ADDR := 40009, 
                            DATA_LEN := 4,
                            DATA_PTR := P#DB10.DBX0.0 WORD 8,
                            DONE =&gt; #MasterDone,
                            BUSY =&gt; #MasterBusy,
                            ERROR =&gt; #MasterError,
                            STATUS =&gt; #MasterStatus);
        IF #MasterError = TRUE THEN 
            #MasterStatus_stored := #MasterStatus;
            "TA_State".%X2 := FALSE;
            #State := 10;
        ELSIF #MasterDone = TRUE THEN
            #MasterStatus := 0;
            "TA_State".%X2 := TRUE;
            "TA10_Rx".SW :="MasterData".dataPtr.data[0];
            "TA10_Rx".Act1 := "MasterData".dataPtr.data[1];
            "TA10_Rx".Act2 := "MasterData".dataPtr.data[2];
            "TA10_Rx".DataIO_12 := "MasterData".dataPtr.data[3];
            #State := 9;
        END_IF;
    9: // Write Node 10
        "MasterData".dataPtr.data[0] := "TA10_Tx".CW;
        "MasterData".dataPtr.data[1] := "TA10_Tx".Ref1;
        "MasterData".dataPtr.data[2] := "TA10_Tx".Ref2;
        "Modbus_Master_DB"(REQ := TRUE,
                            MB_ADDR := 10, 
                            MODE := 1, 
                            DATA_ADDR := 40001, 
                            DATA_LEN := 3,
                            DATA_PTR := P#DB10.DBX0.0 WORD 8,
                            DONE =&gt; #MasterDone,
                            BUSY =&gt; #MasterBusy,
                            ERROR =&gt; #MasterError,
                            STATUS =&gt; #MasterStatus);
        IF #MasterError = TRUE THEN 
            #MasterStatus_stored := #MasterStatus;
            "TA_State".%X2 := FALSE;
            #State := 10;
        ELSIF #MasterDone = TRUE THEN
            "TA_State".%X2 := TRUE;
            #MasterStatus := 0;
            #State := 10;
            #Node10CommCycles := #Node10CommCycles + 1;   
        END_IF;

    10: // Read Node 20
        "Modbus_Master_DB"(REQ := TRUE,
                            MB_ADDR := 20, 
                            MODE := 104, 
                            DATA_ADDR := 16#0, 
                            DATA_LEN := 2,
                            DATA_PTR := P#DB10.DBX0.0 WORD 8,
                            DONE =&gt; #MasterDone,
                            BUSY =&gt; #MasterBusy,
                            ERROR =&gt; #MasterError,
                            STATUS =&gt; #MasterStatus);
        IF #MasterError = TRUE THEN 
            #MasterStatus_stored := #MasterStatus;
            "TA_State".%X7 := FALSE;
            #State := 3;
        ELSIF #MasterDone = TRUE THEN
            "TA_State".%X7 := TRUE;
            #MasterStatus := 0;
            "CVM1" := "MasterData".dataPtr.data[0];
            "CVM2" := "MasterData".dataPtr.data[1];
            #Node20CommCycles := #Node20CommCycles + 1;
            #State := 3;
        END_IF;

    // More nodes can go here, remember to jump to State 3 last.
</Text>
  </LineComment>
  <NewLine Num="1" UId="459" />
  <Token Text="END_CASE" UId="460" />
  <Token Text=";" UId="461" />
  <NewLine Num="1" UId="462" />
</StructuredText></NetworkSource>
          <ProgrammingLanguage>SCL</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="4" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="5" CompositionName="Items">
                <AttributeList>
                  <Culture>de-DE</Culture>
                  <Text>NOTE: The DB at Modbus_Master's DATA_PTR pin must have "Optimized Access" disabled in its properties.
</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="6" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="7" CompositionName="Items">
                <AttributeList>
                  <Culture>de-DE</Culture>
                  <Text>Init modbus</Text>
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <SW.Blocks.CompileUnit ID="8" CompositionName="CompileUnits">
        <AttributeList>
          <NetworkSource />
          <ProgrammingLanguage>FBD</ProgrammingLanguage>
        </AttributeList>
        <ObjectList>
          <MultilingualText ID="9" CompositionName="Comment">
            <ObjectList>
              <MultilingualTextItem ID="A" CompositionName="Items">
                <AttributeList>
                  <Culture>de-DE</Culture>
                  <Text />
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
          <MultilingualText ID="B" CompositionName="Title">
            <ObjectList>
              <MultilingualTextItem ID="C" CompositionName="Items">
                <AttributeList>
                  <Culture>de-DE</Culture>
                  <Text />
                </AttributeList>
              </MultilingualTextItem>
            </ObjectList>
          </MultilingualText>
        </ObjectList>
      </SW.Blocks.CompileUnit>
      <MultilingualText ID="D" CompositionName="Title">
        <ObjectList>
          <MultilingualTextItem ID="E" CompositionName="Items">
            <AttributeList>
              <Culture>de-DE</Culture>
              <Text>Modbus RTU Master</Text>
            </AttributeList>
          </MultilingualTextItem>
        </ObjectList>
      </MultilingualText>
    </ObjectList>
  </SW.Blocks.FB>
</Document>