FUNCTION_BLOCK "fbTemperatureController2"
TITLE = Heating and cooling control
{ S7_Optimized_Access := 'TRUE' }
VERSION : 0.1
//2-sided on/off control
   VAR_INPUT 
      sTemperature : "stCalcValue";   // Process value
      bEnable : Bool;
      bReset : Bool;   // 1 = reset manual modes
   END_VAR

   VAR_OUTPUT 
      bHeating : Bool;
      bCooling : Bool;
      bAtSetpoint : Bool;
   END_VAR

   VAR_IN_OUT 
      sTag : "stTemperatureController2";
   END_VAR

   VAR 
      Heating { S7_SetPoint := 'False'} : "fbHysteresis";
      Cooling : "fbHysteresis";
      Enabled { S7_SetPoint := 'True'} : Bool;
   END_VAR

   VAR_TEMP 
      fHeatingSetpoint : Real;
      fCoolingSetpoint : Real;
   END_VAR


BEGIN
	// 2-sided on/off temperature controller
	// Active heating & active cooling
	// Variant of fbOnOffController but with two regulation thresholds
	
	// Reset manual modes.
	IF #bReset THEN
	    #sTag.bManualMode := FALSE;
	    #sTag.fManualCoolingSetpoint := 0.0;
	    #sTag.fManualHeatingSetpoint := 0.0;
	    #sTag.bManualOverride := FALSE;
	    #sTag.nOverrideState := 0;
	END_IF;
	
	IF #sTag.bManualOverride = TRUE THEN
	    // In manual override, everything is awesome
	    #sTag.bAtSetpoint := TRUE;
	    #sTag.bFault := FALSE;
	    CASE #sTag.nOverrideState OF
	        0: // Off
	            #sTag.bHeating := FALSE;
	            #sTag.bCooling := FALSE;
	        1: // Heating
	            #sTag.bHeating := TRUE;
	            #sTag.bCooling := FALSE;
	        2: // Cooling
	            #sTag.bHeating := FALSE;
	            #sTag.bCooling := TRUE;
	    END_CASE;
	ELSE
	    // Choose setpoint
	    IF #sTag.bManualMode = TRUE THEN
	        #fHeatingSetpoint := #sTag.fManualHeatingSetpoint;
	        #fCoolingSetpoint := #sTag.fManualCoolingSetpoint;
	    ELSE
	        #fHeatingSetpoint := #sTag.fHeatingSetpoint;
	        #fCoolingSetpoint := #sTag.fCoolingSetpoint;
	    END_IF;
	
	    // Enabled when enabled from process and from HMI (Auto), or in Manual mode
	    #Enabled := (#bEnable AND #sTag.bEnable) OR #sTag.bManualMode;
	
	    // Run controller
	    IF #Enabled = TRUE AND #sTemperature.bError = FALSE AND (#fHeatingSetpoint < #fCoolingSetpoint) THEN
	        #Heating(fValue := #sTemperature.fValue, fLimit := #fHeatingSetpoint, fHysteresis := 0.5, bType := 0, bOutput => #sTag.bHeating);
	        #Cooling(fValue := #sTemperature.fValue, fLimit := #fCoolingSetpoint, fHysteresis := 0.5, bType := 1, bOutput => #sTag.bCooling);
	        #sTag.bAtSetpoint := NOT(#sTag.bHeating) AND NOT(#sTag.bCooling);
	    ELSE
	        #sTag.bAtSetpoint := FALSE;
	        #sTag.bHeating := FALSE;
	        #sTag.bCooling := FALSE;
	    END_IF;
	
	    // Controller fault
	    #sTag.bFault := #sTemperature.bError;
	    
	END_IF;
	
	// Mode
	IF #sTag.bManualOverride = TRUE THEN
	    #sTag.nMode := 3;
	ELSIF #sTag.bManualMode = TRUE THEN
	    #sTag.nMode := 2;
	ELSIF #sTag.bEnable = TRUE THEN
	    #sTag.nMode := 1;
	ELSE
	    #sTag.nMode := 0;
	END_IF;
	
	// Local outputs
	#bHeating := #sTag.bHeating;
	#bCooling := #sTag.bCooling;
	#bAtSetpoint := #sTag.bAtSetpoint;
	
END_FUNCTION_BLOCK

