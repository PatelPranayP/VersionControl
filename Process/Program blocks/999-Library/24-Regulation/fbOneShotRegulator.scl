FUNCTION_BLOCK "fbOneShotRegulator"
{ S7_Optimized_Access := 'TRUE' }
AUTHOR : Heaten
VERSION : 0.1
   VAR_INPUT 
      bEnable : Bool;   // 1 = enable regulator, 0 = disable regulator
      bReset : Bool;   // 1 = reset everything to zero
   END_VAR

   VAR_OUTPUT 
      bOutput : Bool;
   END_VAR

   VAR_IN_OUT 
      sTag : "stOneShotRegulator";
   END_VAR

   VAR 
      Controller { S7_SetPoint := 'False'} : "fbOneShot";
   END_VAR

   VAR_TEMP 
      Enabled : Bool;
   END_VAR


BEGIN
	// One-shot regulator
	// Activate something once for a certain period, with a start delay
	// The on-period and start delay are parameters
	// Auto mode: one-shot operation when Enable = true
	// Manual override: force the output on or off
	// 
	
	// Reset manual modes.
	IF #bReset THEN
	    #sTag.bManualOverride := FALSE;
	    #sTag.bOverrideCmd := FALSE;
	    #Controller.bEnable := FALSE;
	END_IF;
	
	// Select operating mode
	IF #sTag.bManualOverride = TRUE THEN
	    // In manual override, everything is awesome
	    #sTag.bFault := FALSE;
	    #sTag.bOutput := #sTag.bOverrideCmd;
	ELSE
	    // Enabled when enabled from process and from HMI (Auto)
	    #Enabled := (#bEnable AND #sTag.bEnable);
	    
	    // Run controller
	    #Controller(bEnable := #Enabled,
	                tOnTime := #sTag.tOnTime,
	                tStartDelay := #sTag.tStartDelay,
	                bOut => #sTag.bOutput,
	                tOnTimeElapsed => #sTag.tOnTimeElapsed,
	                tStartDelayElapsed => #sTag.tStartDelayElapsed);
	    
	    // Controller fault
	    #sTag.bFault := FALSE;
	    
	END_IF;
	
	// Mode
	IF #sTag.bManualOverride = TRUE THEN
	    #sTag.nMode := 3;
	ELSIF #sTag.bEnable = TRUE THEN
	    #sTag.nMode := 1;
	ELSE
	    #sTag.nMode := 0;
	END_IF;
	
	// Local outputs
	#bOutput := #sTag.bOutput;
END_FUNCTION_BLOCK

